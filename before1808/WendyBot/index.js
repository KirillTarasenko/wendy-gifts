const { parse } = require("csv-parse");
const { shuffle, uniqBy, groupBy } = require("lodash");
const { instance } = require("./api");
const path = require('path');
const fs = require('fs').promises;
const { checkNameById, accStr } = require("./utils");
const { bot, sendTG, checkTgIdInChannel } = require("./tg-bot");
const dayjs = require('dayjs')
const schedule = require('node-schedule');

let jobGifts;
let jobService;


// job send gifts 5:10 MSK
jobGifts = schedule.scheduleJob('0 10 2 * * *', function() {
  bot.sendMessage(OWNER_ID, "[job send gifts] 5:10 MSK");
  sendGifts();
});

// job service –°–ë 10:00 MSK
jobService = schedule.scheduleJob('0 0 7 * * 7', function() {
  bot.sendMessage(OWNER_ID, "[job service] –°–ë 10:00 MSK");
  checks();
});


let addedUsers = [];
let isPauseBot = false;

const STASY_TG = 985612311;
const ASSOL7I_TG = 1100707268;
const OWNER_ID = 457980948;


const STEP_DELAY = 800;
const CHECK_NAME_STEP_DELAY = 400;
const MODERATORS = [STASY_TG, ASSOL7I_TG];

const ROLES_MODERATORS = [...MODERATORS, OWNER_ID];
const ROLES_ADMIN = [OWNER_ID];

const canPassRole = (msg, perms) => {
  return !perms || perms.includes(msg.from.id);
}

const USERS_PERSIST_PATH = path.join(process.cwd(), 'users.json');
const getLabelTime = () => `–ú–°–ö (+3 utc) ${dayjs().add(3, 'hours').format("DD-MM-YYYY HH:mm:ss")}`

async function loadSavedUsersIfExist() {
  try {
    const content = await fs.readFile(USERS_PERSIST_PATH);
    addedUsers = uniqBy(JSON.parse(content), 'id');
  } catch (err) {
    console.log("=>", err);
    return null;
  }
}

const FAQ_TEXT = `
–ù–∞–ø–æ–º–∏–Ω–∞–µ–º –æ —á–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã—Ö –≤–æ–ø—Ä–æ—Å–∞—Ö:

–û—Å–Ω–æ–≤–Ω–∞—è —Ä–∞–∑–¥–∞—á–∞: –ù–∞—á–∞–ª–æ 5:10 –º—Å–∫ (–µ—Å–ª–∏ –ø—Ä–æ–ø–∏—Å–∞—Ç—å /info –º–æ–∂–Ω–æ —É–≤–∏–¥–µ—Ç—å –ø—Ä–∏–º–µ—Ä–Ω–æ —Å–∫–æ–ª—å–∫–æ –¥–ª–∏—Ç—Å—è —Ä–∞–∑–¥–∞—á–∞)

–û—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã:

–í–æ–ø—Ä–æ—Å: –ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –±–æ—Ç?
–û—Ç–≤–µ—Ç: - –†–∞–Ω–æ —É—Ç—Ä–æ–º –ø–æ—Å–ª–µ —Ä–µ—Å—Ç–∞—Ä—Ç–∞, –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –ø—Ä–æ–≥—Ä–∞–º–º–∞, –∫–æ—Ç–æ—Ä–∞—è –∑–∞–±–∏—Ä–∞–µ—Ç –∑–∞ –≤–∞—Å –±–µ—Å–ø–ª–∞—Ç–Ω—É—é —ç–Ω–µ—Ä–≥–∏—é (+60) —Å —Å–∞–π—Ç–∞ https://wendy-shop.nexters.com.

–í–æ–ø—Ä–æ—Å: –ß—Ç–æ –Ω—É–∂–Ω–æ —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å —Å–µ–±—è/–¥—Ä—É–≥–∞/—Å–æ–≥–∏–ª—å–¥–∏–π—Ü–∞?
–û—Ç–≤–µ—Ç: - –ü—Ä–æ–ø–∏—Å–∞—Ç—å –∫–æ–º–∞–Ω–¥—É –≤ —ç—Ç–æ–π –≥—Ä—É–ø–ø–µ –∏–ª–∏ –≤ –ª–∏—á–∫—É –±–æ—Ç–∞: /add ID

–í–æ–ø—Ä–æ—Å: –Ø –≤—á–µ—Ä–∞ –¥–æ–±–∞–≤–∏–ª id –Ω–æ —Å–µ–≥–æ–¥–Ω—è –Ω–µ –ø—Ä–∏—à–ª–æ!!!
–û—Ç–≤–µ—Ç: - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ –≤–∞—à ID —Ç–æ—á–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Ä–∞—Å—Å—ã–ª–∫—É –∫–æ–º–∞–Ω–¥–æ–π /me. –ï—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç –≤ —Ä–∞—Å—Å—ã–ª–∫–µ - –¥–æ–±–∞–≤—å—Ç–µ –ø–æ–≤—Ç–æ—Ä–Ω–æ.

–í–æ–ø—Ä–æ—Å: –ú–æ–≥—É –ª–∏ —è —É–¥–∞–ª–∏—Ç—å —Å–µ–±—è –∏–∑ —Ä–∞—Å—Å—ã–ª–∫–∏?
–û—Ç–≤–µ—Ç: - –î–∞. –ù–∞–ø–∏—à–∏—Ç–µ @marstut –≤ –ª–∏—á–∫—É —Å —Ç–∞–∫–æ–π –ø—Ä–æ—Å—å–±–æ–π –∏ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Å–∫—Ä–∏–Ω —Å –≤–∞—à–∏–º –∏–≥—Ä–æ–≤—ã–º ID.

–í–æ–ø—Ä–æ—Å: –ö–∞–∫ –ø–æ–Ω—è—Ç—å —á—Ç–æ —è –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Ä–∞—Å—Å—ã–ª–∫—É?
–û—Ç–≤–µ—Ç: - –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –µ—â–µ —Ä–∞–∑ –∫–æ–º–∞–Ω–¥—É /me —Å –≤–∞—à–∏–º –∏–≥—Ä–æ–≤—ã–º ID. –ù–∞–ø—Ä–∏–º–µ—Ä: /me 1223334444

–í–æ–ø—Ä–æ—Å: –ù–∞–Ω–æ—Å–∏—Ç –ª–∏ –≤—Ä–µ–¥ –¥–∞–Ω–Ω—ã–π –±–æ—Ç —Ä–∞–±–æ—Ç–µ —Å–∞–π—Ç–∞?
–û—Ç–≤–µ—Ç: -–ù–µ—Ç. –ó–∞–ø—Ä–æ—Å—ã –ø–æ–¥–∞—Ä–∫–∞ –ø—Ä–æ–∏—Å—Ö–æ–¥—è—Ç –Ω–µ —á–∞—â–µ 1-2 —Ä–∞–∑ –≤ —Å–µ–∫—É–Ω–¥—É (—á–∏—Å—Ç–æ –≤ —Ç–µ–æ—Ä–∏–∏ –º–æ–∂–Ω–æ –∑–∞–±–∏—Ä–∞—Ç—å –≤ —Ä—É—á–Ω—É—é –±—ã—Å—Ç—Ä–µ–µ)

–í–æ–ø—Ä–æ—Å: –ï—Å–ª–∏ –≤—ã–π—Ç–∏ –∏–∑ –≥—Ä—É–ø–ø—ã, —Ä–∞—Å—Å—ã–ª–∫–∞ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å?
–û—Ç–≤–µ—Ç: - –î–∞. –ù–æ –º—ã —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –±—ã—Ç—å –ø–æ–¥–ø–∏—Å–∞–Ω—ã–º –Ω–∞ –æ—Å–Ω–æ–≤–Ω–æ–π –∫–∞–Ω–∞–ª (https://t.me/wendy_bot_news), —á—Ç–æ–±—ã –≤ —Å–ª—É—á–∞–µ —á–µ–≥–æ –±—ã—Ç—å –≤ –∫—É—Ä—Å–µ –Ω–æ–≤–æ—Å—Ç–µ–π.

–í–æ–ø—Ä–æ—Å: –ß—Ç–æ –µ—â–µ –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å?
–û—Ç–≤–µ—Ç: - –ï—Å–ª–∏ –≤—ã –ø–µ—Ä–µ–Ω–µ—Å–ª–∏ –∞–∫–∫–∞—É–Ω—Ç - –≤–∞—à –∏–≥—Ä–æ–≤–æ–π ID –∏–∑–º–µ–Ω–∏—Ç—Å—è –∏ –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –ø–æ –Ω–æ–≤–æ–π –µ–≥–æ –≤–Ω–æ—Å–∏—Ç—å –≤ –±–æ—Ç–∞.

–í–æ–ø—Ä–æ—Å: –ö–∞–∫ —è –º–æ–≥—É –≤–∞—Å –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å?
–û—Ç–≤–µ—Ç: - –¢–µ–ø–µ—Ä—å –∫–∞–∂–¥—ã–π –∂–µ–ª–∞—é—â–∏–π –º–æ–∂–µ—Ç –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å –∫–∞–Ω–∞–ª –ø–æ —Å—Å—ã–ª–∫–µ: https://www.donationalerts.com/r/marstut`

const BOT_HUCK_TEXT = `–ù–∞–ø–∏—à–∏—Ç–µ id (—Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã)`;

loadSavedUsersIfExist();

const MAIN_LIST = `
    https://docs.google.com/spreadsheets/u/0/d/1Q94gtj4Puk8JWTKsFE-aKBh_irITYOI3j53eW2IHl58/export?format=csv&id=1Q94gtj4Puk8JWTKsFE-aKBh_irITYOI3j53eW2IHl58&gid=0`;
const CHECK_LIST = `
    https://docs.google.com/spreadsheets/d/1Q94gtj4Puk8JWTKsFE-aKBh_irITYOI3j53eW2IHl58/export?format=csv&id=1Q94gtj4Puk8JWTKsFE-aKBh_irITYOI3j53eW2IHl58&gid=1713670405`;



const SENDER_ID = "127705881"; // tg@marstut

let gotList = [];
let sendList = [];
let problemsList = [];

const NOBODY_TEXT = "ü§∑‚Äç‚ôÇÔ∏è";

bot.onText(/\/start/, (msg) => {
  bot.sendMessage(msg.chat.id,
    "–ü—Ä–∏–≤–µ—Ç. –Ø –±–æ—Ç —Å Wendy –ø–æ–¥–∞—Ä–∫–∞–º–∏.\n–ü–∏—à–∏ '/add id' —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç –≤ —Ä–∞—Å—Å—ã–ª–∫—É. –ù–∞–ø—Ä–∏–º–µ—Ä: \n/add 123456789");
});


bot.onText(/\/add/, async (msg) => {
  await adding(msg);
});

const adding = async (msg) => {
  if (isPauseBot) {
    bot.sendMessage(msg.chat.id, "üßë‚Äçüíª‚è∞ –ë–æ—Ç –æ—Ç–¥—ã—Ö–∞–µ—Ç. –ù–æ–≤—ã–µ –∑–∞—è–≤–∫–∏ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ –ø—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è. –°–ª–µ–¥–∏—Ç–µ –∑–∞ –Ω–æ–≤–æ—Å—Ç—è–º–∏ —Ç—É—Ç - https://t.me/wendy_bot_news", {
      reply_to_message_id: msg.message_id,
    });
    return;
  }

  if (msg.text === '/add@daily_wendy_gift_bot') {
    return;
  }

  const id = msg.text.match(new RegExp(/[0-9]+/gm))?.[0];
  if (!id) {
    bot.sendMessage(msg.chat.id, "–ù—É–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å id. –ù–∞–ø—Ä–∏–º–µ—Ä /add 1223334444.", {
      reply_to_message_id: msg.message_id,
    });
    return;
  }
  const isHaveInTable = !!addedUsers.find(e => +e.id === +id);
  if (isHaveInTable) {
    bot.sendMessage(msg.chat.id, "‚è∞ –ê–∫–∫–∞—É–Ω—Ç —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–ø–∏—Å–æ–∫ –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É.", {
      reply_to_message_id: msg.message_id,
    });
    return;
  }
  const res = await checkNameById(id);
  if (res.success) {
    if (isHaveInTable) {
      bot.sendMessage(msg.chat.id, "–¢–∞–∫–æ–π id —É–∂–µ –µ—Å—Ç—å –≤ —Ä–∞—Å—Å—ã–ª–∫–µ", {
        reply_to_message_id: msg.message_id,
      });
      return;
    }
    bot.sendMessage(msg.chat.id, `‚úÖ‚è∞ ${id} –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Ä–∞—Å—Å—ã–ª–∫—É. –ù–∞–ø–æ–º–∏–Ω–∞–µ–º —á—Ç–æ –ø–æ—Å–ª–µ 18 –∞–≤–≥—É—Å—Ç–∞, –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ https://t.me/wendy_bot_news, —è–≤–ª—è–µ—Ç—Å—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–º —É—Å–ª–æ–≤–∏–µ–º –¥–ª—è —É—á–∞—Å—Ç–∏—è –≤ —Ä–∞—Å—Å—ã–ª–∫–µ.\n –í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–≤–æ–π —Å—Ç–∞—Ç—É—Å –∫–æ–º–∞–Ω–¥–æ–π /metest@daily_wendy_gift_bot`, {
      reply_to_message_id: msg.message_id,
    });
    addedUsers.push({ nickname: res.nickname, id, tg: msg.from?.username, tgId: msg.from?.id });
    fs.writeFile(USERS_PERSIST_PATH, JSON.stringify(addedUsers));
    console.log("‚ûï " + res.nickname + " " + id);
  } else {
    bot.sendMessage(msg.chat.id, res.error);
  }
}

bot.on("message", async (msg) => {
  if (!msg.text) {
    return;
  };
  if (msg.text.startsWith("/faq")) {
    bot.sendMessage(msg.chat.id, FAQ_TEXT);
    return;
  }


  if (msg.reply_to_message?.text === BOT_HUCK_TEXT) {
    adding({ ...msg, text: "/add " + msg.text?.trim() });
    // bot.sendMessage(msg.chat.id, `–ù–∞–ø–∏—à–∏—Ç–µ id (—Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã)`, {
    //   reply_to_message_id: msg.message_id,
    //   // reply_markup: {
    //   //   force_reply: true,
    //   // }
    // });

    // bot.sendMessage(msg.chat.id, `–ú–°–ö (+3 utc) ${dayjs().add(3, 'hours').format("DD-MM-YYYY HH:mm:ss")} `, {
    //   reply_to_message_id: msg.message_id,
    //   reply_markup: {
    //     force_reply: true,
    //   }
    // });
    return;
  }
  console.log(msg);
  console.log(`${msg.from.username} ${msg.from.id}: ${msg.text}`);

  if (msg.text === "/metest@daily_wendy_gift_bot") {
    const id = msg.text.match(new RegExp(/[0-9].+/gm))?.[0];
    const userInTable = addedUsers.find(e => +e.id === +id);
    // if (!id) {
    //   bot.sendMessage(msg.chat.id, "üßê –£–∫–∞–∂–∏—Ç–µ ID –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã /me. –ù–∞–ø—Ä–∏–º–µ—Ä: /me 122333444", { reply_to_message_id: msg.message_id, });
    //   return;
    // }
    const haveIDInTgChannel = await checkTgIdInChannel(msg.from.id);
    const groupTgId = groupBy(addedUsers, "tgId")[msg.from.id];
    if (haveIDInTgChannel) {
      const botMsg = `‚úÖüéÅ –í—Å–µ —É—Å–ª–æ–≤–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω—ã. –£ –≤–∞—Å ${accStr(groupTgId?.length || 0)} —É—á–∞—Å—Ç–≤—É—é—Ç –≤ —Ä–∞—Å—Å—ã–ª–∫–µ:\n ${groupTgId?.length ? groupTgId.map(e => e.nickname).join(", ") : "-"}`.slice(0, 4092);
      bot.sendMessage(msg.chat.id, botMsg + (botMsg.length > 4091 ? "..." : ""), {
        reply_to_message_id: msg.message_id,
      });
    } else {
      bot.sendMessage(msg.chat.id, `üö´üéÅ –í—ã –¥–æ–±–∞–≤–∏–ª–∏ ${accStr(groupTgId?.length || 0)}, –Ω–æ –≤–∞–º —Ç–∞–∫ –∂–µ –Ω—É–∂–Ω–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ https://t.me/wendy_bot_news, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∞—Ç—å —ç–Ω–µ—Ä–≥–∏—é`, {
        reply_to_message_id: msg.message_id,
      });
    }

    return;
  }

  if (msg.text.startsWith("/me")) {
    const id = msg.text.match(new RegExp(/[0-9].+/gm))?.[0];
    const userInTable = addedUsers.find(e => +e.id === +id);
    if (!id) {
      bot.sendMessage(msg.chat.id, "üßê –£–∫–∞–∂–∏—Ç–µ ID –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã /me. –ù–∞–ø—Ä–∏–º–µ—Ä: /me 122333444", { reply_to_message_id: msg.message_id, });
      return;
    }
    if (!!userInTable) {
      bot.sendMessage(msg.chat.id, `‚úÖ –¢–∞–∫–æ–π ID –µ—Å—Ç—å –≤ —Ä–∞—Å—Å—ã–ª–∫–µ –ø–æ–¥ –Ω–∏–∫–æ–º (${userInTable.nickname}). –†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –≤ 5:10 –ú–°–ö –µ–∂–µ–¥–Ω–µ–≤–Ω–æ –∏ –¥–ª–∏—Ç—Å—è –≤ —Ç–µ—á–µ–Ω–∏–∏ ` + getTime(addedUsers?.length), { reply_to_message_id: msg.message_id, });
    } else {
      bot.sendMessage(msg.chat.id, "ü§∑ –¢–∞–∫–æ–≥–æ ID –Ω–µ—Ç –≤ —Ä–∞—Å—Å—ã–ª–∫–µ. –ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å - –Ω–∞–∂–º–∏—Ç–µ:\n/add" + id, { reply_to_message_id: msg.message_id, });
    }
    return;
  }



  if (msg.text.toLowerCase().startsWith("id") || msg.text.startsWith("/Add") || msg.text.toLowerCase().startsWith("add") || msg.text.match(new RegExp(/^\d+$/))?.[0]) {
    bot.sendMessage(msg.chat.id, "–ù—É–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å /add –∏ ID –≤ –æ–¥–Ω–æ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–∏. –ù–∞–ø—Ä–∏–º–µ—Ä:\n/add 1223334444", { reply_to_message_id: msg.message_id, });
    return;
  }

  if (canPassRole(msg, ROLES_ADMIN) && msg.text.startsWith("/run")) {
    sendTG("üéâ –ë–æ—Ç —Å–Ω–æ–≤–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å –∑–∞—è–≤–∫–∏.üéâ");
    isPauseBot = false;
    return;
  }
  if (canPassRole(msg, ROLES_ADMIN) && msg.text.startsWith("/stop")) {
    sendTG("üï∫üèª –ë–æ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –æ—Ç–¥—ã—Ö–∞—Ç—å üíÉüèª");
    isPauseBot = true;
    return;
  }

  if (canPassRole(msg, ROLES_ADMIN) && msg.text === "/jobs_run") {
    bot.sendMessage(OWNER_ID, "–ó–∞–ø—É—â–µ–Ω—ã –≤—Å–µ –¥–∂–æ–±—ã");

    // job send gifts 5:10 MSK
    jobGifts = schedule.scheduleJob('0 10 2 * * *', function() {
      bot.sendMessage(OWNER_ID, "[job send gifts] 5:10 MSK");
      sendGifts();
    });

    // job service –°–ë 10:00 MSK
    jobService = schedule.scheduleJob('0 0 7 * * 7', function() {
      bot.sendMessage(OWNER_ID, "[job service] –°–ë 10:00 MSK");
      checks();
    });
    return;
  }

  if (canPassRole(msg, ROLES_ADMIN) && msg.text === "/jobs_stop") {
    bot.sendMessage(msg.chat.id, "Jobs were stops");
    jobGifts?.cancel();
    jobService?.cancel();
    return;
  }


  if (isPauseBot || !msg.text) {
    return;
  }

  if (canPassRole(msg, ROLES_ADMIN) && msg.text.startsWith("/gifts")) {
    const lastCount = msg.text.match(new RegExp(/[0-9].+/gm))?.[0];
    bot.sendMessage(msg.chat.id, `Last count: ${lastCount}, General count: ${addedUsers?.length}`, { reply_to_message_id: msg.message_id, });
    sendGifts(addedUsers?.length - lastCount);
    return;
  }
  if (msg.text.startsWith("/add@daily_wendy_gift_bot")) {
    bot.sendMessage(msg.chat.id, BOT_HUCK_TEXT, {
      reply_to_message_id: msg.message_id,
      reply_markup: {
        force_reply: true,
      }
    });
    return;
  }

  if (canPassRole(msg, ROLES_ADMIN) && msg.text.startsWith("/backup")) {
    backup();
    return;
  }

  if (canPassRole(msg, ROLES_ADMIN) && msg.text.startsWith("/checks")) {
    checks(msg);
    return;
  }


  if (canPassRole(msg, ROLES_MODERATORS) && msg.text.startsWith("/remove")) {
    const id = msg.text.match(new RegExp(/[0-9]+/gm))?.[0];
    const isHaveInTable = !!addedUsers.find(e => +e.id === +id);
    if (isHaveInTable) {
      addedUsers = addedUsers.filter(e => +e.id !== +id);
      fs.writeFile(USERS_PERSIST_PATH, JSON.stringify(addedUsers));
      bot.sendMessage(msg.chat.id, `‚úÖüóë ${id} —É–¥–∞–ª–µ–Ω –∏–∑ —Ä–∞—Å—Å—ã–ª–∫–∏`, {
        reply_to_message_id: msg.message_id,
      });
    } else {
      bot.sendMessage(msg.chat.id, `üö´üóë ${id} –Ω–µ—Ç —Ç–∞–∫–æ–≥–æ ID –≤ —Ä–∞—Å—Å—ã–ª–∫–µ`, {
        reply_to_message_id: msg.message_id,
      });
    }

    return;
  }

  if (msg.text.startsWith("/info")) {
    bot.sendMessage(msg.chat.id, `–û—Å–Ω–æ–≤–Ω–æ–π –∫–∞–Ω–∞–ª - https://t.me/wendy_bot_news\n\n–û–±—Å—É–∂–¥–µ–Ω–∏–µ - https://t.me/daily_wendy_gifts\n‚è∞ –í —Ä–∞—Å—Å—ã–ª–∫–µ: ${addedUsers?.length || 0} –∞–∫–∫–∞—É–Ω—Ç–æ–≤\n/add id = –î–æ–±–∞–≤–ª—è–µ—Ç –∞–∫–∫–∞—É–Ω—Ç –≤ —Ä–∞—Å—Å—ã–ª–∫—É\n–†–∞—Å—Å—ã–ª–∫–∞ –Ω–∞ –≤—Å–µ –∞–∫–∫–∞—É–Ω—Ç—ã –∑–∞–π–º–µ—Ç –ø—Ä–∏–º–µ—Ä–Ω–æ ${getTime(addedUsers?.length)}`, {
      reply_markup: JSON.stringify({
        hide_keyboard: true
      })
    });
    return;
  }
});

const sendGiftByID = (id, nick) =>
  instance
    .post("bundles/free_energy/buy?filters[locale]=ru", {
      data: {
        // platform_buyer_id: SENDER_ID,
        // platform_recipient_id: "" + id,
        platform_buyer_id: "" + id,

      },
    })
    .then(() => {
      sendList.push(`${nick} (${id})`);
      return "[‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ " + nick + " with id: (" + id + ")]";
    })
    .catch((error) => {
      const isGot = error.response?.data?.errors?.[0]?.status === "422";
      const errorMsg = (isGot
        ? "[ü§¶‚Äç‚ôÇÔ∏è –£–∂–µ –±—Ä–∞–ª "
        : "[üö´ –û—à–∏–±–∫–∞ ") +
        nick +
        " with id: (" +
        id +
        ")] " +
        (isGot ? "" : JSON.stringify(error.response?.data));
      if (isGot) {
        gotList.push(`${nick} (${id})`);
      } else {
        problemsList.push({ nickname: nick, id, errorMsg });
      }

      return errorMsg;
    });

const minutesStr = count => {
  if (count % 10 === 1 && count % 100 !== 11) {
    return ' –º–∏–Ω—É—Ç–∞';
  } else if (
    [2, 3, 4].indexOf(count % 10) >= 0 &&
    [12, 13, 14].indexOf(count % 100) < 0
  ) {
    return ' –º–∏–Ω—É—Ç—ã';
  } else {
    return ' –º–∏–Ω—É—Ç';
  }
};

const getTime = (count, multi = STEP_DELAY) => {
  const minuts = Math.round((multi * count) / 60000);
  return minuts + minutesStr(minuts)
};

const sendGifts = async (lastCount = 0) => {
  gotList = [];
  sendList = [];
  problemsList = [];
  try {
    sendTG("üéâ –ù–∞—á–∏–Ω–∞–µ–º —Ä–∞—Å—Å—ã–ª–∞—Ç—å —ç–Ω–µ—Ä–≥–∏—é –Ω–∞ –ø–æ—á—Ç—É üéâ. –í —Ç–µ—á–µ–Ω–∏–∏ " + getTime(lastCount || addedUsers?.length) + " –∫ –≤–∞–º –Ω–∞ –ø–æ—á—Ç—É –ø—Ä–∏–¥–µ—Ç –ø–∏—Å—å–º–æ —Å +60 —ç–Ω–µ—Ä–≥–∏–∏");
    let delay = 0;
    shuffle(addedUsers.slice(lastCount)).forEach(({ nickname: name, id }, index, arr) => {
      setTimeout(() => {
        sendGiftByID(id, name).then((result) => console.log(result));
      }, STEP_DELAY + delay);
      if (index === arr.length - 1) {
        setTimeout(() => {
          const gots = gotList.join(', ');
          const sends = sendList.join(', ');
          sendTG("‚õî –û—à–∏–±–∫–∏: " + (problemsList?.length || NOBODY_TEXT));
          const sendedMSG = `üê¢ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ ${getLabelTime()}: ${sendList?.length || 0} —à—Ç(—ç—Ç–æ ${(sendList.length || 0) * 60} —ç–Ω–µ—Ä–≥–∏–∏)`;
          sendTG(sendedMSG);
          bot.sendMessage(OWNER_ID, sendedMSG);
          sendTG(`ü§¶‚Äç‚ôÇÔ∏è –£–∂–µ –≤–∑—è–ª–∏ –±–µ—Å–ø–ª–∞—Ç–Ω—É—é —ç–Ω–µ—Ä–≥–∏—é: ${gotList?.length || 0} —à—Ç`);
        }, STEP_DELAY + delay + 10000);

        setTimeout(() => {
          sendTG(`ü•πü•πü•π –†–∞–∑–¥–∞—á–∞ –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å - –ø—Ä–æ–≤–µ—Ä—è–π—Ç–µ –ø–æ—á—Ç—É.–í—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–ª—è—Ç—å —Å–æ–≥–∏–ª—å–¥–∏—Ü–µ–≤ / –¥—Ä—É–∑–µ–π - –ø–∏—à–∏—Ç–µ / add id\n\n –û—Å–Ω–æ–≤–Ω–æ–π –∫–∞–Ω–∞–ª - https://t.me/wendy_bot_news\n\n–ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å–Ω–∞—è –Ω–∞ —á–∞—Ç - https://t.me/daily_wendy_gifts`);
        }, STEP_DELAY + delay + 15000);
      }
      delay += STEP_DELAY;
    });
  } catch (err) {
    console.log("Some Google Error ", err);
    bot.sendMessage(OWNER_ID, "[ERROR-gifts]" + JSON.stringify({ err }));
  }
};

const backup = () => {
  const nameFile = `${new Date().getDate()}-${new Date().getMonth()}-${new Date().getFullYear()}_${new Date().getHours()}:${new Date().getMinutes()}`;
  fs.copyFile('users.json', `backups/${nameFile}.json`, fs.constants.COPYFILE_FICLONE_FORCE);
  console.log("–°–æ–∑–¥–∞–ª–∏ backup " + nameFile);
}

const checks = async (msg) => {
  let problems = [];
  let updatedAddedUsers = [];
  try {
    backup();
    isPauseBot = true;
    sendTG(`üßë‚Äçüíª‚è∞ –ù–∞—á–∞–ª–æ—Å—å –ø–ª–∞–Ω–æ–≤–æ–µ —Å–µ—Ä–≤–µ—Ä–Ω–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –±–∞–∑—ã –±–æ—Ç–∞.\n\n–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: ${getTime(addedUsers.length, CHECK_NAME_STEP_DELAY)}\n\n –ù–æ–≤—ã–µ –∑–∞—è–≤–∫–∏ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ –ø—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è. –°–ª–µ–¥–∏—Ç–µ –∑–∞ –Ω–æ–≤–æ—Å—Ç—è–º–∏ —Ç—É—Ç - https://t.me/wendy_bot_news`);
    let delay = 0;
    // if(!!msg){
    //         bot.sendMessage(msg.chat.id, `‚è∞ –ù–∞—á–∞–ª–∏ —á–µ–∫–∞—Ç—å –∏–º–µ–Ω–∞. –ó–∞–π–º–µ—Ç ${getTime(addedUsers.length, CHECK_NAME_STEP_DELAY)}`, { reply_to_message_id: msg.message_id });
    //      }


    shuffle(addedUsers).forEach((entity, index, arr) => {
      const { nickname: name, id } = entity;
      setTimeout(() => {
        checkNameById(id).then((result) => {
          if (result.success) {
            updatedAddedUsers.push({ ...entity, nickname: result.nickname });
          } else {
            problems.push({ nickname: name, id: id, error: result.error })
          }
        });
      }, CHECK_NAME_STEP_DELAY + delay);

      if (index === arr.length - 1) {
        setTimeout(() => {
          // if(!!msg){
          //    bot.sendMessage(msg.chat.id, `üö´üóë‚õî –û—à–∏–±–∫–∏: ${problems.map(e => `${e.id} ${e.error} ${e.nickname}`)}`, { reply_to_message_id: msg.message_id });
          // }

          const errorsNameFile = `logs/problems-${new Date().getDate()}-${new Date().getMonth()}-${new Date().getFullYear()}_${new Date().getHours()}:${new Date().getMinutes()}`;
          const newListNameFile = `logs/newlist-${new Date().getDate()}-${new Date().getMonth()}-${new Date().getFullYear()}_${new Date().getHours()}:${new Date().getMinutes()}`;
          addedUsers = updatedAddedUsers;
          fs.writeFile(errorsNameFile, JSON.stringify(problems));
          fs.writeFile(newListNameFile, JSON.stringify(updatedAddedUsers));
          fs.writeFile(USERS_PERSIST_PATH, JSON.stringify(updatedAddedUsers));

          isPauseBot = false;
          sendTG("üéâ –ë–æ—Ç —Å–Ω–æ–≤–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å –∑–∞—è–≤–∫–∏.üéâ");

        }, CHECK_NAME_STEP_DELAY + delay + 15000);
      }
      delay += CHECK_NAME_STEP_DELAY;
    });
  } catch (err) {
    console.log("Some Google Error ", err);
    bot.sendMessage(OWNER_ID, "[ERROR-checks]" + JSON.stringify({ err }));
  }
}